#!/bin/bash -xe
#The directory scriptKafka is placed in bench_dir
bench_dir=/opt/scriptKafka
brk_temp_file=$bench_dir/server.properties
brk_temp_file_1=$bench_dir/server-1.properties
brk_temp_file_2=$bench_dir/server-2.properties
brk_dest_file=/root/kafka_2.11-1.0.0/config/

brk_f=$bench_dir/brk.conf
zoo_quorum=zk-1:2181,zk-3:2181,zk-4:2181/kafka
#zoo_quorum=zk-1:2181/kafka
brk_log_dir=/root/logs/kafka-logs
brk_log_dir_1=/root/logs/kafka-logs-1
brk_log_dir_2=/root/logs/kafka-logs-2

pushd $bench_dir

brk_list=""
[ ! -f $brk_f ] && { echo "$brk_f file not found"; exit 1; }

while read f
do
  brk_list="$brk_list $f"
done < $brk_f

#comment all configs in server/server-1/server-2.properties.
configComment(){
    for i in $bench_dir/server*
    do
        sed -i "s/^\([^#]\)/#\1/g" $i
        sed -i "s/^broker.id/#broker.id/" $i
        sed -i "s/^num.network.threads/#num.network.threads/" $i
        sed -i "s/^num.io.threads/#num.io.threads/" $i
        sed -i "s/^socket.send.buffer.bytes/#socket.send.buffer.bytes/" $i
        sed -i "s/^socket.receive.buffer.bytes/#socket.receive.buffer.bytes/" $i
        sed -i "s/^socket.request.max.bytes/#socket.request.max.bytes/" $i
        sed -i "s/^log.dirs/#log.dirs/" $i
        sed -i "s/^num.partitions/#num.partitions/" $i
        sed -i "s/^num.recovery.threads.per.data.dir/#num.recovery.threads.per.data.dir/" $i
        sed -i "s/^log.retention.hours/#log.retention.hours/" $i
        sed -i "s/^zookeeper.connect/#zookeeper.connect/" $i
        sed -i "s/^zookeeper.connection.timeout.ms/#zookeeper.connection.timeout.ms/" $i
    done
}

#update all config in server/server-1/server-2.properties.
#$1 is brk name and $2 is brk_temp_file/brk_temp_file_1/brk_temp_file_2
configUpdate(){
  case $2 in
    $brk_temp_file)
      echo "broker.id=$3" >> $2
      echo "num.network.threads=16" >> $2
      echo "num.io.threads=16" >> $2
      echo "socket.send.buffer.bytes=104857600" >> $2
      echo "socket.receive.buffer.bytes=104857600" >> $2
      echo "socket.request.max.bytes=104857600" >> $2
      echo "log.dirs=$brk_log_dir" >> $2
      echo "num.partitions=12" >> $2
      echo "num.recovery.threads.per.data.dir=4" >> $2
      echo "log.retention.minutes=5" >> $2
      echo "zookeeper.connect=$zoo_quorum" >> $2
      echo "zookeeper.connection.timeout.ms=100000" >> $2
      echo "request.timeout.ms=100000" >> $2
      echo "log.cleaner.threads=16" >> $2
      echo "background.threads=16" >> $2
      echo "num.replica.fetchers=16" >> $2
      echo "listeners=PLAINTEXT://$1:9092" >> $2
      echo "delete.topic.enable=true" >> $2
      echo "offsets.commit.timeout.ms=500000" >> $2
      echo "replica.fetch.wait.max.ms=5000" >> $2
      echo "replica.socket.receive.buffer.bytes=67108864" >> $2
      echo "replica.socket.timeout.ms=300000" >> $2
      echo "log.cleaner.backoff.ms=60000" >> $2
      ;;

    $brk_temp_file_1)
      echo "broker.id=$3" >> $2
      echo "num.network.threads=16" >> $2
      echo "num.io.threads=16" >> $2
      echo "socket.send.buffer.bytes=104857600" >> $2
      echo "socket.receive.buffer.bytes=104857600" >> $2
      echo "socket.request.max.bytes=104857600" >> $2
      echo "log.dirs=$brk_log_dir_1" >> $2
      echo "num.partitions=12" >> $2
      echo "num.recovery.threads.per.data.dir=4" >> $2
      echo "log.retention.minutes=5" >> $2
      echo "zookeeper.connect=$zoo_quorum" >> $2
      echo "zookeeper.connection.timeout.ms=100000" >> $2
      echo "request.timeout.ms=100000" >> $2
      echo "log.cleaner.threads=16" >> $2
      echo "background.threads=16" >> $2
      echo "num.replica.fetchers=16" >> $2
      echo "listeners=PLAINTEXT://$1:9093" >> $2
      echo "delete.topic.enable=true" >> $2
      echo "offsets.commit.timeout.ms=500000" >> $2
      echo "replica.fetch.wait.max.ms=5000" >> $2
      echo "replica.socket.receive.buffer.bytes=67108864" >> $2
      echo "replica.socket.timeout.ms=300000" >> $2
      echo "log.cleaner.backoff.ms=60000" >> $2
      ;;

    $brk_temp_file_2)
      echo "broker.id=$3" >> $2
      echo "num.network.threads=16" >> $2
      echo "num.io.threads=16" >> $2
      echo "socket.send.buffer.bytes=104857600" >> $2
      echo "socket.receive.buffer.bytes=104857600" >> $2
      echo "socket.request.max.bytes=104857600" >> $2
      echo "log.dirs=$brk_log_dir_2" >> $2
      echo "num.partitions=12" >> $2
      echo "num.recovery.threads.per.data.dir=4" >> $2
      echo "log.retention.minutes=5" >> $2
      echo "zookeeper.connect=$zoo_quorum" >> $2
      echo "zookeeper.connection.timeout.ms=100000" >> $2
      echo "request.timeout.ms=100000" >> $2
      echo "log.cleaner.threads=16" >> $2
      echo "background.threads=16" >> $2
      echo "num.replica.fetchers=16" >> $2
      echo "listeners=PLAINTEXT://$1:9094" >> $2
      echo "delete.topic.enable=true" >> $2
      echo "offsets.commit.timeout.ms=500000" >> $2
      echo "replica.fetch.wait.max.ms=5000" >> $2
      echo "replica.socket.receive.buffer.bytes=67108864" >> $2
      echo "replica.socket.timeout.ms=300000" >> $2
      echo "log.cleaner.backoff.ms=60000" >> $2
      ;;
    esac
}



#copy config file(server/server-1/server-2) to all broker machines.
#$1 is brk name and $2 is brk_temp_file/brk_temp_file_1/brk_temp_file_2
configCopy(){
  echo $1
  scp $2 root@$1:$brk_dest_file
}

count=-1
#calling methods in sequence.
for i in $bench_dir/server*
do
  case $i in
      $brk_temp_file)

      for brk in $brk_list
      do
          configComment
          count=$((count+1))
          configUpdate $brk $brk_temp_file $count
          configCopy $brk $brk_temp_file
      done
      ;;

      $brk_temp_file_1)

      for brk in $brk_list
      do
          configComment
          count=$((count+1))
          configUpdate $brk $brk_temp_file_1 $count
          configCopy $brk $brk_temp_file_1
      done
      ;;

      $brk_temp_file_2)

      for brk in $brk_list
      do
          configComment
          count=$((count+1))
          configUpdate $brk $brk_temp_file_2 $count
          configCopy $brk $brk_temp_file_2
      done
      ;;
   esac
done
